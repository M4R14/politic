{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/todo","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Todo\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This is an example of a todo list item that's complete\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"Todo lists are useful for keeping organised and focused\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This one is not completed yet\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"You can mark it completed by pressing \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Option\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"C\"), \" (or \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Alt\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"C\"), \") when your cursor is on this line\", mdx(\"ul\", {\n    \"className\": \"contains-task-list\",\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"You can also select multiple lines and mark them all at once!\"))), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"When you press enter at the end of a line, it adds a new todo item on the next line\"), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"This, and more is provided by the \", mdx(\"a\", {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one\",\n    \"parentName\": \"li\"\n  }, \"Markdown All in One\"), \" plugin by \", mdx(\"a\", {\n    \"href\": \"https://github.com/yzhang-gh\",\n    \"parentName\": \"li\"\n  }, \"Yu Zhang\"))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"inbox\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Inbox\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Here you can write disorganised notes to be categorised later\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Bullet points are useful, but it could be free form text as well\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Sometimes it's better to just get things off your mind quickly, rather than stop to think where it belongs\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"But don't let this list get too long\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Move information to more specific documents and link to them.\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"This helps you navigate between documents quickly\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"For example, you can \", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Cmd\"), \"+\", mdx(\"inlineCode\", {\n    \"parentName\": \"li\"\n  }, \"Click\"), \" this: [\", mdx(\"a\", {\n    \"href\": \"todo\",\n    \"title\": \"Todo\",\n    \"parentName\": \"li\"\n  }, \"todo\"), \"]\"))), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Some notes don't end up making sense the next day\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"That's ok, you can just delete them!\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"You can always find them in your git history, if you really need it!\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"921a9754-a9dd-5040-93f6-5a7250a0d7b8","fields":{"slug":"/inbox","title":"Inbox"}}}]},"fields":{"slug":"/todo","title":"Todo"}}},"pageContext":{"id":"b0a7f7f1-5b61-5622-bb98-78d298c29c3a"}},"staticQueryHashes":["2098632890","426988268"]}